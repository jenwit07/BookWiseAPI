{"version":3,"sources":["../src/app.js"],"names":["require","env","process","NODE_ENV","bodyParser","port","LINEPORT","app","expressSwagger","global","apiModels","sequelize","DataTypes","use","limit","extended","req","res","next","header","setHeader","json","urlencoded","get","send","swaggerOptions","listen","console","log","format","APP_ENV"],"mappings":";;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AATAA,OAAO,CAAC,YAAD,CAAP,CAAsBC,GAAtB,WAA6BC,OAAO,CAACD,GAAR,CAAYE,QAAzC;;AAWA;AACA,IAAMC,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,IAAI,GAAGH,OAAO,CAACD,GAAR,CAAYK,QAAZ,IAAwB,IAArC;AAEA,IAAIC,GAAG,GAAG,0BAAV;;AACA,IAAMC,cAAc,GAAGR,OAAO,CAAC,2BAAD,CAAP,CAAqCO,GAArC,CAAvB;;AACAE,MAAM,CAACC,SAAP,GAAmB,4BAAWC,aAAX,EAAsBC,oBAAtB,CAAnB;AAEAL,GAAG,CAACM,GAAJ,CAAQ,sBAAK;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAL,CAAR;AACAR,GAAG,CAACM,GAAJ,CAAQ,4BAAW;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAX,CAAR;AACAR,GAAG,CAACM,GAAJ,CAAQ,UAACG,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,cAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,+BAAX,EAA4C,MAA5C;AACAF,EAAAA,GAAG,CAACG,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;AACAF,EAAAA,IAAI;AACL,CAPD;AAQAX,GAAG,CAACM,GAAJ,CAAQ,uBAAR;AAEAN,GAAG,CAACM,GAAJ,CAAQT,UAAU,CAACiB,IAAX,EAAR;AACAd,GAAG,CAACM,GAAJ,CACET,UAAU,CAACkB,UAAX,CAAsB;AACpBP,EAAAA,QAAQ,EAAE;AADU,CAAtB,CADF;AAMAR,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACO,IAAJ;AAGD,CAJD;AAMAhB,cAAc,CAACiB,sBAAD,CAAd;AAEA,wBAAOlB,GAAP;AAEAA,GAAG,CAACmB,MAAJ,CAAWrB,IAAX,EAAiB,YAAM;AACrBsB,EAAAA,OAAO,CAACC,GAAR,0BACoB,yBAAQC,MAAR,CAChB,qBADgB,CADpB,oDAG6CxB,IAH7C,kBAIIH,OAAO,CAACD,GAAR,CAAY6B,OAJhB;AAOD,CARD","sourcesContent":["require(\"custom-env\").env(`${process.env.NODE_ENV}`);\r\nimport express from \"express\";\r\nimport { json, urlencoded } from \"body-parser\";\r\nimport cors from \"cors\";\r\nimport routes from \"./config/routes\";\r\nimport dayjs from \"dayjs\";\r\nimport { sequelize } from \"./config/db.config\";\r\nimport { initModels } from \"./app/models/init-models\";\r\nimport { DataTypes } from \"sequelize\";\r\nimport { swaggerOptions } from \"./config/swagger/config.swagger\";\r\n\r\n/* CONFIG */\r\nconst bodyParser = require(\"body-parser\");\r\nconst port = process.env.LINEPORT || 3306;\r\n\r\nvar app = express();\r\nconst expressSwagger = require(\"express-swagger-generator\")(app);\r\nglobal.apiModels = initModels(sequelize, DataTypes);\r\n\r\napp.use(json({ limit: \"50mb\", extended: true }));\r\napp.use(urlencoded({ limit: \"50mb\", extended: true }));\r\napp.use((req, res, next) => {\r\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n  res.header(\"Access-Control-Allow-Methods\", \"GET,PUT,POST,DELETE,OPTIONS\");\r\n  res.header(\"Access-Control-Allow-Headers\", \"Content-Type\");\r\n  res.header(\"Access-Control-Expose-Headers\", \"ETag\");\r\n  res.setHeader(\"Access-Control-Allow-Credentials\", true);\r\n  next();\r\n});\r\napp.use(cors());\r\n\r\napp.use(bodyParser.json());\r\napp.use(\r\n  bodyParser.urlencoded({\r\n    extended: true,\r\n  })\r\n);\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.send(\r\n    `Anakin Service is running`\r\n  );\r\n});\r\n\r\nexpressSwagger(swaggerOptions);\r\n\r\nroutes(app);\r\n\r\napp.listen(port, () => {\r\n  console.log(\r\n    `#### Stat Time ${dayjs().format(\r\n      \"DD/MM/YYYY HH:mm:ss\"\r\n    )} --- Anakin Service is running on port ${port} and ${\r\n      process.env.APP_ENV\r\n    } env`\r\n  );\r\n});\r\n"],"file":"app.js"}