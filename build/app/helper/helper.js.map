{"version":3,"sources":["../../../src/app/helper/helper.js"],"names":["Joi","require","module","exports","getDateTimeFormatStr","date","format","pagination","req","res","next","query","cur_page","per_page","parseInt","limit","offset","joiValidator","_schema","schema","options","abortEarly","allowUnknown","stripUnknown","data","method","body","validate","value","error","valid","joi","details","message","map","i","join","console","log","status","json"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\r\nconst Joi = require(\"joi\");\r\n\r\nmodule.exports = {\r\n  getDateTimeFormatStr: function (date, format = \"DD/MM/YY HH:mm:ss\") {\r\n    return dayjs(date).format(format);\r\n  },\r\n  pagination: (req, res, next) => {\r\n    let { cur_page, per_page } = req.query;\r\n    if (cur_page && per_page) {\r\n      req.cur_page = parseInt(cur_page);\r\n      req.per_page = parseInt(per_page);\r\n      req.limit = parseInt(per_page);\r\n      req.offset = parseInt(cur_page) * parseInt(per_page) - parseInt(per_page);\r\n    }\r\n    next();\r\n  },\r\n  joiValidator: (_schema) => {\r\n    return async (req, res, next) => {\r\n      let { schema, options } = _schema;\r\n      if (!options) {\r\n        options = {\r\n          abortEarly: false, // include all errors\r\n          allowUnknown: true, // ignore unknown props\r\n          stripUnknown: true, // remove unknown props\r\n        };\r\n      }\r\n\r\n      let data = {};\r\n\r\n      if (req.method == \"POST\" || req.method == \"PUT\" || req.method == \"PATCH\")\r\n        data = req.body;\r\n      if (req.method == \"GET\" || req.method == \"DELETE\") data = req.query;\r\n\r\n      const { value, error } = await schema.validate(data, options);\r\n      const valid = error == null;\r\n\r\n      if (valid) {\r\n        req.joi = value;\r\n        next();\r\n      } else {\r\n        const { details } = error;\r\n        const message = details.map((i) => i.message).join(\",\");\r\n\r\n        console.log(\"error\", message);\r\n        res.status(422).json({ error: message });\r\n      }\r\n    };\r\n  },\r\n};\r\n"],"file":"helper.js"}